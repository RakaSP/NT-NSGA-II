# Paths
nodes: Problems/vrp_nodes.csv
vehicles: Problems/vrp_vehicles.csv
routes_out: solution_routes.json
summary_out: solution_summary.csv

# Choose one: ga | pso | aco | nsga2
algorithm: nsga2
scorer: distance # distance | cost

# RL PARAMETERS
rl_enabled: true
training_enabled: true
second_nn_path: null     # path to load/save the SecondNN checkpoint (e.g., results/ntnsga2_erx/checkpoints/second_nn.pt)

# Training loop
epochs: 10               # outer epochs in your run() loop
batch_size: 8            # number of episodes per policy update

# Policy/optimizer
second_hidden: 128       # hidden size for SecondNN
second_lr: 0.0003        # Adam LR for SecondNN

# REINFORCE update knobs (used by update_second_nn)
entropy_coef: 0.001      # entropy bonus coefficient
std_reg_coef: 0.0        # L2 penalty toward std_target on log_std params
std_target: 0.25         # target std (in unsquashed space)
adv_clip: 5.0            # clip advantages to [-adv_clip, adv_clip]

# Output folder for all CSV/JSON results
output_dir: results/ntnsga2_erx

# Verbose logs
# TRACE: per-iteration best & mean score + progress
# INFO:  high-level summary only
logger: INFO

# Algorithm parameters
algo_params:
  ga:
    iters: 1000 # keep depth
    population_size: 300
    crossover_rate: 0.8
    mutation_rate: 0.3
    elite_count: 10
    crossover_method: cx
    mutation_method: inversion

  pso:
    iters: 1200 # more iterations (cheap per-iter)
    population_size: 300 # modestly larger swarm for diversity
    inertia_weight: 0.9
    cognitive_weight: 2.0
    social_weight: 2.0

  aco:
    iters: 300 # fewer iterations
    number_of_ants: 60 # fewer ants (was 90)
    pheromone_exponent: 1.2
    heuristic_exponent: 3.0
    evaporation_rate: 0.2

  nsga2:
    iters: 1000
    population_size: 50
    crossover_rate: 0.3
    mutation_rate: 0.8
    crossover_method: eax
    mutation_method: inversion
